"use strict";module.exports=function(t,e,n){var p={bump:{type:"patch"},dest:".",git:{branch:"master",options:{args:" --tag"},remote:{name:"origin"}},name:"publish",src:["bower.json","package.json"],tasks:void 0};return function(i){i=n.merge({},p,i);var s=i.name+":commit",r=i.name+":push",a=i.name+":npm",o=(i.name+":prep",i.name),m=i.name+":tag";return t.task(m,i.tasks,function(){var n=e.filter("package.json",{restore:!0});return t.src(i.src).pipe(e.debug({title:m})).pipe(e.bump(i.bump)).pipe(t.dest(i.dest)).pipe(n).pipe(e.shrinkwrap()).pipe(n.restore).pipe(t.dest(i.dest)).pipe(n).pipe(e.tagVersion())}),t.task(s,[m],function(){return t.src(i.src).pipe(e.debug({title:"git:"})).pipe(e.git.commit(i.bump.type))}),{npm:function(){t.task(r,function(){e.git.push(i.git.remote.name,i.git.branch,i.git.options)}),t.task(o,[r],function(t){n.spawn("win32"===process.platform?"npm.cmd":"npm",["publish"],{stdio:"inherit"}).on("close",t)}),t.task(a,[s],function(){return t.start([r,o])})}}}};